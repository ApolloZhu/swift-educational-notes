<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Swift 错误诊断教育文档</title><link>/swift-educational-notes/</link><description>Recent content on Swift 错误诊断教育文档</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>Copyright © 2020 Apollo Zhu</copyright><lastBuildDate>Thu, 07 Nov 2019 21:18:07 +0000</lastBuildDate><atom:link href="/swift-educational-notes/index.xml" rel="self" type="application/rss+xml"/><item><title>关于 Swift 错误诊断的教育文档</title><link>/swift-educational-notes/about/</link><pubDate>Thu, 07 Nov 2019 21:18:07 +0000</pubDate><guid>/swift-educational-notes/about/</guid><description>教育文档 Educational notes are short-form documentation attached to a diagnostic which explain relevant language concepts. They are intended to further Swift&amp;rsquo;s goal of progressive disclosure by providing a learning resource at the point of use when encountering an error message for the first time. 在极少数的情况下，他们还允许主要的诊断消息使用</description><content:encoded><![CDATA[<h2 id="教育文档">教育文档</h2>
<p>Educational notes are short-form documentation attached to a diagnostic which explain relevant language concepts. They are intended to further Swift&rsquo;s goal of progressive disclosure by providing a learning resource at the point of use when encountering an error message for the first time. 在极少数的情况下，他们还允许主要的诊断消息使用更专业的术语，而不用担心像“名义类型”（nominal type）这样的词会对新手不够友好。</p>
<p>When outputting diagnostics on the command line, educational notes will be printed after the main diagnostic body if enabled using the <code>-print-educational-notes</code> driver option. When presented in an IDE, it&rsquo;s expected they will be collapsed under a disclosure arrow, info button, or similar to avoid cluttering output.</p>
<p>教育文档应该：</p>
<ul>
<li>Explain a single language concept. This makes them easy to reuse across related diagnostics and helps keep them clear, concise, and easy to understand.</li>
<li>Be written in unabbreviated English. These are longer-form messages compared to the main diagnostic, so there&rsquo;s no need to omit needless words and punctuation.</li>
<li>Not generally exceed 3-4 paragraphs. Educational notes should be clear and easily digestible. Messages which are too long also have the potential to create UX issues on the command line.</li>
<li>Be accessible. Educational notes should be beginner friendly and avoid assuming unnecesary prior knowledge. The goal is not only to help users understand what a diagnostic is telling them, but also to turn errors and warnings into &ldquo;teachable moments&rdquo;.</li>
<li>Include references to relevant chapters of <em>The Swift Programming Language</em>.</li>
<li>Be written in Markdown, but avoid excessive markup which negatively impacts the terminal UX.</li>
</ul>
<h2 id="如何贡献新的英文教育文档">如何贡献新的（英文）教育文档</h2>
<p>Adding new educational notes is a great way to get familiar with the process of contributing to Swift, while also making a big impact!</p>
<p>To add a new educational note:</p>
<ol>
<li>Follow the <a href="https://github.com/apple/swift#getting-sources-for-swift-and-related-projects"target="_blank">directions in the README</a> to checkout the Swift sources locally. Being able to build the Swift compiler is recommended, but not required, when contributing a new note.</li>
<li>Identify a diagnostic to write an educational note for. To associate an educational note with a diagnostic name, you&rsquo;ll need to know its internal identifier. The easiest way to do this is to write a small program which triggers the diagnostic, and run it using the <code>-debug-diagnostic-names</code> compiler flag. This flag will cause the internal diagnostic identifier to be printed after the diagnostic message in square brackets.</li>
<li>Find any closely related diagnostics. Sometimes, what appears to be one diagnostic from a user&rsquo;s perspective may have multiple variations internally. After determining a diagnostic&rsquo;s internal identifier, run a search for it in the compiler source. You should find:
<ul>
<li>An entry in a <code>Diagnostics*.def</code> file describing the diagnostic. If there are any closely related diagnostics the note should also be attached to, they can usually be found nearby.</li>
<li>Each point in the compiler source where the diagnostic is emitted. This can be helpful in determining the exact circumstances which cause it to be emitted.</li>
</ul>
</li>
<li>Add a new Markdown file in the <code>userdocs/diagnostics/</code> directory in the swift repository containing the contents of the note. When writing a note, keep the writing guidelines from the section above in mind. The existing notes in the directory are another useful guide.</li>
<li>Associate the note with the appropriate diagnostics in <code>EducationalNotes.def</code>. An entry like <code>EDUCATIONAL_NOTES(property_wrapper_failable_init, &quot;property-wrapper-requirements.md&quot;)</code> will associate the note with filename <code>property-wrapper-requirements.md</code> with the diagnostic having an internal identifier of <code>property_wrapper_failable_init</code>.</li>
<li>If possible, rebuild the compiler and try recompiling your test program with <code>-print-educational-notes</code>. Your new note should appear after the diagnostic in the terminal.</li>
<li>That&rsquo;s it! The new note is now ready to be submitted as a pull request on GitHub.</li>
</ol>
<p>如果你在完成上面步骤的时候遇到了困难或者有任何的问题，欢迎在 Swift 论坛发帖提问，或者在 GitHub 提交一个合并拉取请求草稿。</p>
]]></content:encoded></item><item><title>Posts</title><link>/swift-educational-notes/post/</link><pubDate>Sat, 02 Nov 2019 20:48:38 +0000</pubDate><guid>/swift-educational-notes/post/</guid><description/><content:encoded></content:encoded></item></channel></rss>